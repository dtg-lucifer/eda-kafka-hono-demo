services:
  consumer:
    build:
      context: ./post-consumer
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    depends_on:
      - kafka
      - mongodb
    networks:
      - kafka-net
    environment:
      KAFKA_BROKER: "kafka:29092"

  producer:
    build:
      context: ./post-producer
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - mongodb
    networks:
      - kafka-net
    environment:
      KAFKA_BROKER: "kafka:29092"

  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
      - mongodb
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_MIN_INSYNC_REPLICAS: "1"
    networks:
      - kafka-net

  mongodb:
    image: mongo:8-noble
    ports:
      - "27017:27017"
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    networks:
      - kafka-net

networks:
  kafka-net:
